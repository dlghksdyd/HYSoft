<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Communication</name>
    </assembly>
    <members>
        <member name="T:HYSoft.Communication.Tcp.Client.Protocol.FileTransfer.FileTransferClient">
            <summary>
            파일 전송 클라이언트 구현 클래스입니다.
            
            <para>
            서버와 지정된 프로토콜로 파일 전송을 수행하며,
            헤더 전송 → 서버 응답(Resume 여부) → 본문 전송 → Tail 전송 → 최종 상태 응답의 순서를 따릅니다.
            </para>
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.Protocol.FileTransfer.FileTransferClient.#ctor(HYSoft.Communication.Tcp.Client.TcpClientOptions)">
            <summary>
            <see cref="T:HYSoft.Communication.Tcp.Client.Protocol.FileTransfer.FileTransferClient"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="options">서버 접속 정보를 포함한 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClientOptions"/>.</param>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.Protocol.FileTransfer.FileTransferClient.SendFileAsync(System.String)">
            <summary>
            지정한 파일을 서버로 전송합니다.
            </summary>
            <param name="filePath">전송할 로컬 파일 경로.</param>
            <returns>
            비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.
            전송 완료 시 정상적으로 완료되며,
            서버가 오류를 반환하거나 네트워크 오류 발생 시 <see cref="T:System.IO.IOException"/> 또는 <see cref="T:System.InvalidOperationException"/>이 발생합니다.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="filePath"/>가 null 또는 빈 문자열일 경우.</exception>
            <exception cref="T:System.IO.FileNotFoundException">지정된 경로에 파일이 존재하지 않는 경우.</exception>
            <exception cref="T:System.IO.IOException">파일 크기 오류, 서버 오류 응답, 전송 중단 등 입출력 예외가 발생한 경우.</exception>
            <exception cref="T:System.InvalidOperationException">이미 다른 파일 전송 작업이 진행 중인 경우.</exception>
            <remarks>
            프로토콜 순서:
            <list type="number">
              <item><description>클라이언트 → 서버: 헤더 [MAGIC_HEADER(4)][Flags(1)][FileSize(8)][NameLen(2)][FileName]</description></item>
              <item><description>서버 → 클라이언트: 응답 [Status(1)][StartOffset(8)]</description></item>
              <item><description>클라이언트 → 서버: 파일 데이터 (StartOffset ~ 끝까지)</description></item>
              <item><description>클라이언트 → 서버: Tail [MAGIC_TAIL(4)][CRC32(4)]</description></item>
              <item><description>서버 → 클라이언트: 최종 상태 [FinalStatus(1)]</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Client.Protocol.FileTransfer.FileTransferClient.Crc32">
            <summary>
            RFC 1952 형태의 표준 CRC32 (Polynomial 0xEDB88320) 계산기.
            </summary>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Client.TcpClient">
            <summary>
            비동기 TCP 클라이언트 구현 클래스입니다.
            서버에 연결하고 데이터를 송수신할 수 있도록 지원합니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed">
            <summary>
            이 인스턴스가 이미 해제(Dispose)되었는지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:HYSoft.Communication.Tcp.Client.TcpClient.Guid">
            <summary>
            클라이언트 인스턴스의 고유 식별자입니다.
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync">
            <summary>
            서버에 비동기적으로 연결을 시도합니다.
            이미 연결된 경우 정상 상태이면 재연결하지 않습니다.
            </summary>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exception cref="T:System.TimeoutException">지정된 연결 제한 시간 내에 연결하지 못한 경우 발생합니다.</exception>
            <exception cref="T:System.InvalidOperationException">객체가 해제되었거나 소켓이 이미 닫힌 경우 발생합니다.</exception>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory{System.Byte})">
            <summary>
            지정한 버퍼의 데이터를 서버로 비동기 전송합니다.
            </summary>
            <param name="buffer">전송할 데이터 버퍼입니다.</param>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exception cref="T:System.InvalidOperationException">소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.</exception>
            <exception cref="T:System.TimeoutException">송신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">네트워크 오류가 발생한 경우 발생합니다.</exception>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}})">
            <summary>
            지정한 여러 버퍼의 데이터를 순차적으로 서버로 전송합니다.
            </summary>
            <param name="buffers">전송할 데이터 버퍼 목록입니다.</param>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exception cref="T:System.InvalidOperationException">소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.</exception>
            <exception cref="T:System.TimeoutException">송신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">네트워크 오류가 발생한 경우 발생합니다.</exception>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory{System.Byte})">
            <summary>
            지정된 버퍼 크기만큼 서버에서 데이터를 수신합니다.
            </summary>
            <param name="buffer">수신한 데이터를 저장할 버퍼입니다.</param>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exception cref="T:System.InvalidOperationException">소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.</exception>
            <exception cref="T:System.TimeoutException">수신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">네트워크 오류 또는 원격 호스트가 연결을 종료한 경우 발생합니다.</exception>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Client.TcpClientManager">
            <summary>
            <see cref="T:HYSoft.Communication.Tcp.Client.TcpClient"/> 인스턴스를 생성하고 관리하는 정적 매니저 클래스입니다.
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClientManager.Create(HYSoft.Communication.Tcp.Client.TcpClientOptions)">
            <summary>
            지정된 옵션을 사용하여 새로운 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClient"/> 인스턴스를 생성하고 내부 관리 목록에 등록합니다.
            </summary>
            <param name="options">생성 시 사용할 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClientOptions"/> 설정입니다.</param>
            <returns>생성된 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClient"/> 인스턴스입니다.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="options"/>가 <c>null</c>인 경우 발생합니다.</exception>
            <exception cref="T:System.InvalidOperationException">클라이언트를 내부 딕셔너리에 등록하지 못한 경우 발생합니다.</exception>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClientManager.Dispose(HYSoft.Communication.Tcp.Client.TcpClient)">
            <summary>
            지정된 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClient"/> 인스턴스를 해제(dispose)하고 내부 관리 목록에서 제거합니다.
            </summary>
            <param name="client">해제할 <see cref="T:HYSoft.Communication.Tcp.Client.TcpClient"/> 인스턴스입니다.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="client"/>가 <c>null</c>인 경우 발생합니다.</exception>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Client.TcpClientOptions">
            <summary>
            TCP 클라이언트의 동작을 정의하는 옵션 클래스입니다.
            </summary>
            <param name="host">서버 호스트 IP 주소입니다.</param>
            <param name="port">서버 포트 번호입니다.</param>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Client.TcpClientOptions.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            TCP 클라이언트의 동작을 정의하는 옵션 클래스입니다.
            </summary>
            <param name="host">서버 호스트 IP 주소입니다.</param>
            <param name="port">서버 포트 번호입니다.</param>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.Host">
            <summary>
            연결할 서버의 호스트 IP 주소를 가져옵니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.Port">
            <summary>
            연결할 서버의 포트 번호를 가져옵니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.NoDelay">
            <summary>
            Nagle 알고리즘을 비활성화할지 여부를 나타냅니다.
            <para>기본값은 <c>true</c>이며, 작은 패킷도 지연 없이 즉시 전송됩니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.ReceiveBufferSize">
            <summary>
            소켓 수신 버퍼의 크기(바이트)를 가져오거나 설정합니다.
            <para>기본값은 64KB입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.SendBufferSize">
            <summary>
            소켓 송신 버퍼의 크기(바이트)를 가져오거나 설정합니다.
            <para>기본값은 64KB입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.ConnectTimeout">
            <summary>
            서버에 연결할 때의 최대 대기 시간입니다.
            <para>기본값은 5초입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.SendTimeout">
            <summary>
            송신 작업이 유휴 상태일 때의 최대 대기 시간입니다.
            <para>기본값은 10초입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Client.TcpClientOptions.ReceiveTimeout">
            <summary>
            수신 작업이 유휴 상태일 때의 최대 대기 시간입니다.
            <para>기본값은 10초입니다.</para>
            </summary>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer">
            <summary>
            간단한 파일 전송 서버 구현.
            클라이언트 프로토콜:
            1) [MAGIC_HEADER(4)="FT10"][Flags(1)][FileSize(8)][NameLen(2)][FileName(UTF-8)]
            2) 서버 응답: [Status(1: 0x00=OK,0x01=RESUME)][StartOffset(8)]
            3) 클라: StartOffset부터 파일 바이트 전송
            4) 클라: [MAGIC_TAIL(4)="FTEN"][CRC32(4)]  (CRC32는 파일 전체 기준)
            5) 서버: [FinalStatus(1): 0x00=OK, 0xFF=ERROR]
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer.#ctor(HYSoft.Communication.Tcp.Server.TcpServerOptions,System.String)">
            <summary>
            <see cref="T:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="options">서버 소켓 설정을 포함하는 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServerOptions"/>.</param>
            <param name="storageRoot">
            수신한 파일을 저장할 루트 폴더 경로.
            지정하지 않으면 <c>AppContext.BaseDirectory\received</c> 폴더가 사용됩니다.
            </param>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer.ReceiveFileAsync">
            <summary>
            파일 수신 서버를 시작하고, 클라이언트 연결에서 전송되는 파일을 수신할 수 있도록 준비합니다.
            </summary>
            <returns>
            비동기적으로 서버 소켓이 시작되는 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <remarks>
            내부적으로 <see cref="M:HYSoft.Communication.Tcp.Server.TcpServer.StartAsync"/>를 호출하고,
            데이터 수신 이벤트 핸들러(<see cref="E:HYSoft.Communication.Tcp.Server.TcpServer.DataReceived"/>)를 등록합니다.
            </remarks>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer.GrowingBuffer">
            <summary>
            동적으로 증가 가능한 메모리 버퍼
            </summary>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.Protocol.FileTransfer.FileTransferServer.Crc32">
            <summary>
            표준 CRC32 계산기 (poly 0xEDB88320)
            </summary>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler">
            <summary>
            TCP 서버에서 클라이언트로부터 데이터가 수신되었을 때 호출되는 이벤트 핸들러를 나타냅니다.
            </summary>
            <param name="context">
            수신된 데이터와 응답을 보낼 수 있는 기능을 포함한 <see cref="T:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext"/> 객체입니다.
            </param>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext">
            <summary>
            TCP 서버에서 특정 클라이언트로부터 데이터가 수신되었을 때 전달되는 컨텍스트입니다.
            </summary>
            <param name="tcpServer">데이터를 수신한 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스입니다.</param>
            <param name="clientId">데이터를 전송한 클라이언트의 고유 식별자입니다.</param>
            <param name="data">수신된 원본 데이터입니다.</param>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext.#ctor(HYSoft.Communication.Tcp.Server.TcpServer,System.Guid,System.Byte[])">
            <summary>
            TCP 서버에서 특정 클라이언트로부터 데이터가 수신되었을 때 전달되는 컨텍스트입니다.
            </summary>
            <param name="tcpServer">데이터를 수신한 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스입니다.</param>
            <param name="clientId">데이터를 전송한 클라이언트의 고유 식별자입니다.</param>
            <param name="data">수신된 원본 데이터입니다.</param>
        </member>
        <member name="F:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext.Data">
            <summary>
            클라이언트로부터 수신된 데이터 바이트 배열입니다.
            </summary>
        </member>
        <member name="F:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext.ClientId">
            <summary>
            클라이언트의 고유 GUID입니다.
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpDataReceivedContext.ReplyAsync(System.Byte[])">
            <summary>
            수신한 클라이언트에게 응답 데이터를 비동기적으로 전송합니다.
            </summary>
            <param name="data">전송할 데이터 바이트 배열입니다.</param>
            <returns>성공 여부를 나타내는 <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.TcpServer">
            <summary>
            비동기 TCP 서버. 연결/해제/수신 이벤트 제공, 개별 송신/브로드캐스트 지원.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed">
            <summary>
            이 인스턴스가 이미 해제(Dispose)되었는지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:HYSoft.Communication.Tcp.Server.TcpServer.Guid">
            <summary>
            서버 인스턴스의 고유 식별자입니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount">
            <summary>
            현재 연결되어 있는 클라이언트 수를 반환합니다.
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot">
            <summary>
            현재 연결된 클라이언트의 스냅샷을 (클라이언트 ID, 원격 EndPoint) 배열로 반환합니다.
            </summary>
            <returns>(Client Id, Remote EndPoint) 쌍의 배열.</returns>
        </member>
        <member name="E:HYSoft.Communication.Tcp.Server.TcpServer.DataReceived">
            <summary>
            클라이언트로부터 데이터가 수신되었을 때 발생하는 이벤트입니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServer.LogError">
            <summary>
            오류 발생 시 호출되는 외부 로깅 델리게이트입니다.
            <para>첫 번째 매개변수는 예외, 두 번째 매개변수는 설명 메시지입니다.</para>
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.StartAsync">
            <summary>
            서버를 시작하고 클라이언트 연결 수락 루프를 비동기적으로 실행합니다.
            </summary>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.StopAsync">
            <summary>
            서버를 중지하고 모든 클라이언트 연결을 종료합니다.
            </summary>
            <returns>비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.Disconnect(System.Guid)">
            <summary>
            지정한 클라이언트 연결을 강제로 끊습니다.
            </summary>
            <param name="clientId">연결을 끊을 클라이언트의 ID.</param>
            <returns>연결이 존재하여 정상적으로 제거되면 <c>true</c>, 그렇지 않으면 <c>false</c>.</returns>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            지정한 클라이언트에 데이터를 비동기적으로 전송합니다.
            </summary>
            <param name="clientId">대상 클라이언트 ID.</param>
            <param name="data">전송할 데이터 버퍼.</param>
            <param name="ct">전송 작업을 취소하기 위한 토큰(선택).</param>
            <returns>성공 시 <c>true</c>, 실패 시 <c>false</c>를 반환합니다.</returns>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            현재 연결된 모든 클라이언트에게 데이터를 브로드캐스트합니다.
            </summary>
            <param name="data">전송할 데이터 버퍼.</param>
            <param name="ct">전송 작업을 취소하기 위한 토큰(선택).</param>
            <returns>성공적으로 전송된 클라이언트 수를 반환합니다.</returns>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.TcpServerManager">
            <summary>
            <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스를 생성하고 관리하는 정적 매니저 클래스입니다.
            </summary>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServerManager.Create(HYSoft.Communication.Tcp.Server.TcpServerOptions)">
            <summary>
            지정된 옵션을 사용하여 새로운 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스를 생성하고 등록합니다.
            </summary>
            <param name="options">서버 생성 시 사용할 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServerOptions"/>입니다.</param>
            <returns>생성된 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스입니다.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="options"/>가 <c>null</c>인 경우 발생합니다.</exception>
            <exception cref="T:System.InvalidOperationException">서버를 내부 딕셔너리에 등록하지 못한 경우 발생합니다.</exception>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServerManager.Dispose(HYSoft.Communication.Tcp.Server.TcpServer)">
            <summary>
            지정된 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스를 해제(dispose)하고 내부 관리 목록에서 제거합니다.
            </summary>
            <param name="server">해제할 <see cref="T:HYSoft.Communication.Tcp.Server.TcpServer"/> 인스턴스입니다.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="server"/>가 <c>null</c>인 경우 발생합니다.</exception>
        </member>
        <member name="T:HYSoft.Communication.Tcp.Server.TcpServerOptions">
            <summary>
            TCP 서버 동작을 설정하기 위한 옵션 클래스입니다.
            </summary>
            <param name="listenAddress">서버가 바인딩할 IP 주소입니다.</param>
            <param name="port">서버가 바인딩할 포트 번호입니다.</param>
        </member>
        <member name="M:HYSoft.Communication.Tcp.Server.TcpServerOptions.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            TCP 서버 동작을 설정하기 위한 옵션 클래스입니다.
            </summary>
            <param name="listenAddress">서버가 바인딩할 IP 주소입니다.</param>
            <param name="port">서버가 바인딩할 포트 번호입니다.</param>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.ListenAddress">
            <summary>
            서버가 바인딩할 IP 주소를 가져옵니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.Port">
            <summary>
            서버가 바인딩할 포트 번호를 가져옵니다.
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.NoDelay">
            <summary>
            TCP 연결에 Nagle 알고리즘을 사용하지 않도록 설정할지 여부를 나타냅니다.
            <para>기본값은 <c>true</c>이며, 지연 없이 데이터를 즉시 전송합니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.ReceiveBufferSize">
            <summary>
            소켓 수신 버퍼의 크기를 가져오거나 설정합니다. (바이트 단위)
            <para>기본값은 64KB입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.SendBufferSize">
            <summary>
            소켓 송신 버퍼의 크기를 가져오거나 설정합니다. (바이트 단위)
            <para>기본값은 64KB입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.BackLog">
            <summary>
            대기열(Backlog)의 크기를 가져오거나 설정합니다.
            <para>클라이언트 연결 요청을 처리하기 전에 큐에 쌓을 수 있는 최대 개수를 나타냅니다.</para>
            <para>기본값은 100입니다.</para>
            </summary>
        </member>
        <member name="P:HYSoft.Communication.Tcp.Server.TcpServerOptions.MaxClients">
            <summary>
            동시에 연결 가능한 최대 클라이언트 수를 가져옵니다.
            <para>기본값은 1024입니다.</para>
            </summary>
        </member>
    </members>
</doc>
