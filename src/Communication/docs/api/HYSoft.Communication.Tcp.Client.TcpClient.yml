### YamlMime:ManagedReference
items:
- uid: HYSoft.Communication.Tcp.Client.TcpClient
  commentId: T:HYSoft.Communication.Tcp.Client.TcpClient
  id: TcpClient
  parent: HYSoft.Communication.Tcp.Client
  children:
  - HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync
  - HYSoft.Communication.Tcp.Client.TcpClient.Guid
  - HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
  - HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory{System.Byte})
  - HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}})
  - HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory{System.Byte})
  langs:
  - csharp
  - vb
  name: TcpClient
  nameWithType: TcpClient
  fullName: HYSoft.Communication.Tcp.Client.TcpClient
  type: Class
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: >-
    비동기 TCP 클라이언트 구현 클래스입니다.

    서버에 연결하고 데이터를 송수신할 수 있도록 지원합니다.
  example: []
  syntax:
    content: public class TcpClient
    content.vb: Public Class TcpClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: HYSoft.Communication.Tcp.Client.TcpClient.Guid
  commentId: F:HYSoft.Communication.Tcp.Client.TcpClient.Guid
  id: Guid
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: TcpClient.Guid
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.Guid
  type: Field
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: 클라이언트 인스턴스의 고유 식별자입니다.
  example: []
  syntax:
    content: public readonly Guid Guid
    return:
      type: System.Guid
    content.vb: Public ReadOnly Guid As Guid
- uid: HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync
  commentId: M:HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync
  id: ConnectAsync
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: ConnectAsync()
  nameWithType: TcpClient.ConnectAsync()
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync()
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: >-
    서버에 비동기적으로 연결을 시도합니다.

    이미 연결된 경우 정상 상태이면 재연결하지 않습니다.
  example: []
  syntax:
    content: public Task ConnectAsync()
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ConnectAsync() As Task
  overload: HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: 지정된 연결 제한 시간 내에 연결하지 못한 경우 발생합니다.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 객체가 해제되었거나 소켓이 이미 닫힌 경우 발생합니다.
- uid: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory{System.Byte})
  commentId: M:HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory{System.Byte})
  id: SendAsync(System.ReadOnlyMemory{System.Byte})
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: SendAsync(ReadOnlyMemory<byte>)
  nameWithType: TcpClient.SendAsync(ReadOnlyMemory<byte>)
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory<byte>)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: 지정한 버퍼의 데이터를 서버로 비동기 전송합니다.
  example: []
  syntax:
    content: public Task SendAsync(ReadOnlyMemory<byte> buffer)
    parameters:
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
      description: 전송할 데이터 버퍼입니다.
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function SendAsync(buffer As ReadOnlyMemory(Of Byte)) As Task
  overload: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: 송신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 네트워크 오류가 발생한 경우 발생합니다.
  nameWithType.vb: TcpClient.SendAsync(ReadOnlyMemory(Of Byte))
  fullName.vb: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.ReadOnlyMemory(Of Byte))
  name.vb: SendAsync(ReadOnlyMemory(Of Byte))
- uid: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}})
  commentId: M:HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}})
  id: SendAsync(System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}})
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: SendAsync(IReadOnlyList<ReadOnlyMemory<byte>>)
  nameWithType: TcpClient.SendAsync(IReadOnlyList<ReadOnlyMemory<byte>>)
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList<System.ReadOnlyMemory<byte>>)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: 지정한 여러 버퍼의 데이터를 순차적으로 서버로 전송합니다.
  example: []
  syntax:
    content: public Task SendAsync(IReadOnlyList<ReadOnlyMemory<byte>> buffers)
    parameters:
    - id: buffers
      type: System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}}
      description: 전송할 데이터 버퍼 목록입니다.
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function SendAsync(buffers As IReadOnlyList(Of ReadOnlyMemory(Of Byte))) As Task
  overload: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: 송신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 네트워크 오류가 발생한 경우 발생합니다.
  nameWithType.vb: TcpClient.SendAsync(IReadOnlyList(Of ReadOnlyMemory(Of Byte)))
  fullName.vb: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync(System.Collections.Generic.IReadOnlyList(Of System.ReadOnlyMemory(Of Byte)))
  name.vb: SendAsync(IReadOnlyList(Of ReadOnlyMemory(Of Byte)))
- uid: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory{System.Byte})
  commentId: M:HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory{System.Byte})
  id: ReceiveAsync(System.Memory{System.Byte})
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: ReceiveAsync(Memory<byte>)
  nameWithType: TcpClient.ReceiveAsync(Memory<byte>)
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory<byte>)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: 지정된 버퍼 크기만큼 서버에서 데이터를 수신합니다.
  example: []
  syntax:
    content: public Task ReceiveAsync(Memory<byte> buffer)
    parameters:
    - id: buffer
      type: System.Memory{System.Byte}
      description: 수신한 데이터를 저장할 버퍼입니다.
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ReceiveAsync(buffer As Memory(Of Byte)) As Task
  overload: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 소켓이 연결되지 않았거나 이미 해제된 경우 발생합니다.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: 수신이 지정된 제한 시간 내에 완료되지 않은 경우 발생합니다.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 네트워크 오류 또는 원격 호스트가 연결을 종료한 경우 발생합니다.
  nameWithType.vb: TcpClient.ReceiveAsync(Memory(Of Byte))
  fullName.vb: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync(System.Memory(Of Byte))
  name.vb: ReceiveAsync(Memory(Of Byte))
- uid: HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
  commentId: P:HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
  id: IsDisposed
  parent: HYSoft.Communication.Tcp.Client.TcpClient
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: TcpClient.IsDisposed
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
  type: Property
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Client/TcpClient.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Client
  summary: 이 인스턴스가 이미 해제(Dispose)되었는지 여부를 나타냅니다.
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed*
references:
- uid: HYSoft.Communication.Tcp.Client
  commentId: N:HYSoft.Communication.Tcp.Client
  isExternal: true
  href: HYSoft.html
  name: HYSoft.Communication.Tcp.Client
  nameWithType: HYSoft.Communication.Tcp.Client
  fullName: HYSoft.Communication.Tcp.Client
  spec.csharp:
  - uid: HYSoft
    name: HYSoft
    isExternal: true
    href: HYSoft.html
  - name: .
  - uid: HYSoft.Communication
    name: Communication
    isExternal: true
    href: HYSoft.Communication.html
  - name: .
  - uid: HYSoft.Communication.Tcp
    name: Tcp
    isExternal: true
    href: HYSoft.Communication.Tcp.html
  - name: .
  - uid: HYSoft.Communication.Tcp.Client
    name: Client
    isExternal: true
    href: HYSoft.Communication.Tcp.Client.html
  spec.vb:
  - uid: HYSoft
    name: HYSoft
    isExternal: true
    href: HYSoft.html
  - name: .
  - uid: HYSoft.Communication
    name: Communication
    isExternal: true
    href: HYSoft.Communication.html
  - name: .
  - uid: HYSoft.Communication.Tcp
    name: Tcp
    isExternal: true
    href: HYSoft.Communication.Tcp.html
  - name: .
  - uid: HYSoft.Communication.Tcp.Client
    name: Client
    isExternal: true
    href: HYSoft.Communication.Tcp.Client.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timeoutexception
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.TimeoutException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Client.TcpClient.html#HYSoft_Communication_Tcp_Client_TcpClient_ConnectAsync
  name: ConnectAsync
  nameWithType: TcpClient.ConnectAsync
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.ConnectAsync
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Net.Sockets.SocketException
  commentId: T:System.Net.Sockets.SocketException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.sockets.socketexception
  name: SocketException
  nameWithType: SocketException
  fullName: System.Net.Sockets.SocketException
- uid: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Client.TcpClient.SendAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Client.TcpClient.html#HYSoft_Communication_Tcp_Client_TcpClient_SendAsync_System_ReadOnlyMemory_System_Byte__
  name: SendAsync
  nameWithType: TcpClient.SendAsync
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.SendAsync
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.ReadOnlyMemory{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<ReadOnlyMemory<byte>>
  nameWithType: IReadOnlyList<ReadOnlyMemory<byte>>
  fullName: System.Collections.Generic.IReadOnlyList<System.ReadOnlyMemory<byte>>
  nameWithType.vb: IReadOnlyList(Of ReadOnlyMemory(Of Byte))
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.ReadOnlyMemory(Of Byte))
  name.vb: IReadOnlyList(Of ReadOnlyMemory(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Client.TcpClient.html#HYSoft_Communication_Tcp_Client_TcpClient_ReceiveAsync_System_Memory_System_Byte__
  name: ReceiveAsync
  nameWithType: TcpClient.ReceiveAsync
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.ReceiveAsync
- uid: System.Memory{System.Byte}
  commentId: T:System.Memory{System.Byte}
  parent: System
  definition: System.Memory`1
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<byte>
  nameWithType: Memory<byte>
  fullName: System.Memory<byte>
  nameWithType.vb: Memory(Of Byte)
  fullName.vb: System.Memory(Of Byte)
  name.vb: Memory(Of Byte)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Memory`1
  commentId: T:System.Memory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<T>
  nameWithType: Memory<T>
  fullName: System.Memory<T>
  nameWithType.vb: Memory(Of T)
  fullName.vb: System.Memory(Of T)
  name.vb: Memory(Of T)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed*
  commentId: Overload:HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
  isExternal: true
  href: HYSoft.Communication.Tcp.Client.TcpClient.html#HYSoft_Communication_Tcp_Client_TcpClient_IsDisposed
  name: IsDisposed
  nameWithType: TcpClient.IsDisposed
  fullName: HYSoft.Communication.Tcp.Client.TcpClient.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
