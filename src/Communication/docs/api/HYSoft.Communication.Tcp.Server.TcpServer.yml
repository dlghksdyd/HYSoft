### YamlMime:ManagedReference
items:
- uid: HYSoft.Communication.Tcp.Server.TcpServer
  commentId: T:HYSoft.Communication.Tcp.Server.TcpServer
  id: TcpServer
  parent: HYSoft.Communication.Tcp.Server
  children:
  - HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  - HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
  - HYSoft.Communication.Tcp.Server.TcpServer.DataReceived
  - HYSoft.Communication.Tcp.Server.TcpServer.Disconnect(System.Guid)
  - HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot
  - HYSoft.Communication.Tcp.Server.TcpServer.Guid
  - HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
  - HYSoft.Communication.Tcp.Server.TcpServer.LogError
  - HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  - HYSoft.Communication.Tcp.Server.TcpServer.StartAsync
  - HYSoft.Communication.Tcp.Server.TcpServer.StopAsync
  langs:
  - csharp
  - vb
  name: TcpServer
  nameWithType: TcpServer
  fullName: HYSoft.Communication.Tcp.Server.TcpServer
  type: Class
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 비동기 TCP 서버. 연결/해제/수신 이벤트 제공, 개별 송신/브로드캐스트 지원.
  example: []
  syntax:
    content: public sealed class TcpServer
    content.vb: Public NotInheritable Class TcpServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: HYSoft.Communication.Tcp.Server.TcpServer.Guid
  commentId: F:HYSoft.Communication.Tcp.Server.TcpServer.Guid
  id: Guid
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: TcpServer.Guid
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.Guid
  type: Field
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 서버 인스턴스의 고유 식별자입니다.
  example: []
  syntax:
    content: public readonly Guid Guid
    return:
      type: System.Guid
    content.vb: Public ReadOnly Guid As Guid
- uid: HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot
  id: GetClientsSnapshot
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: GetClientsSnapshot()
  nameWithType: TcpServer.GetClientsSnapshot()
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot()
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 현재 연결된 클라이언트의 스냅샷을 (클라이언트 ID, 원격 EndPoint) 배열로 반환합니다.
  example: []
  syntax:
    content: public (Guid Id, EndPoint? Remote)[] GetClientsSnapshot()
    return:
      type: System.ValueTuple{System.Guid,System.Net.EndPoint}[]
      description: (Client Id, Remote EndPoint) 쌍의 배열.
    content.vb: Public Function GetClientsSnapshot() As (Id As Guid, Remote As EndPoint)()
  overload: HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.StartAsync
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.StartAsync
  id: StartAsync
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: TcpServer.StartAsync()
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.StartAsync()
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 서버를 시작하고 클라이언트 연결 수락 루프를 비동기적으로 실행합니다.
  example: []
  syntax:
    content: public Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StartAsync() As Task
  overload: HYSoft.Communication.Tcp.Server.TcpServer.StartAsync*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.StopAsync
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.StopAsync
  id: StopAsync
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: StopAsync()
  nameWithType: TcpServer.StopAsync()
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.StopAsync()
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 서버를 중지하고 모든 클라이언트 연결을 종료합니다.
  example: []
  syntax:
    content: public Task StopAsync()
    return:
      type: System.Threading.Tasks.Task
      description: 비동기 작업을 나타내는 <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StopAsync() As Task
  overload: HYSoft.Communication.Tcp.Server.TcpServer.StopAsync*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.Disconnect(System.Guid)
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.Disconnect(System.Guid)
  id: Disconnect(System.Guid)
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: Disconnect(Guid)
  nameWithType: TcpServer.Disconnect(Guid)
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.Disconnect(System.Guid)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 지정한 클라이언트 연결을 강제로 끊습니다.
  example: []
  syntax:
    content: public bool Disconnect(Guid clientId)
    parameters:
    - id: clientId
      type: System.Guid
      description: 연결을 끊을 클라이언트의 ID.
    return:
      type: System.Boolean
      description: 연결이 존재하여 정상적으로 제거되면 <code>true</code>, 그렇지 않으면 <code>false</code>.
    content.vb: Public Function Disconnect(clientId As Guid) As Boolean
  overload: HYSoft.Communication.Tcp.Server.TcpServer.Disconnect*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  id: SendAsync(System.Guid,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: SendAsync(Guid, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType: TcpServer.SendAsync(Guid, ReadOnlyMemory<byte>, CancellationToken)
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 지정한 클라이언트에 데이터를 비동기적으로 전송합니다.
  example: []
  syntax:
    content: public Task<bool> SendAsync(Guid clientId, ReadOnlyMemory<byte> data, CancellationToken ct = default)
    parameters:
    - id: clientId
      type: System.Guid
      description: 대상 클라이언트 ID.
    - id: data
      type: System.ReadOnlyMemory{System.Byte}
      description: 전송할 데이터 버퍼.
    - id: ct
      type: System.Threading.CancellationToken
      description: 전송 작업을 취소하기 위한 토큰(선택).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 성공 시 <code>true</code>, 실패 시 <code>false</code>를 반환합니다.
    content.vb: Public Function SendAsync(clientId As Guid, data As ReadOnlyMemory(Of Byte), ct As CancellationToken = Nothing) As Task(Of Boolean)
  overload: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync*
  nameWithType.vb: TcpServer.SendAsync(Guid, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName.vb: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync(System.Guid, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  name.vb: SendAsync(Guid, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  id: BroadcastAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: BroadcastAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType: TcpServer.BroadcastAsync(ReadOnlyMemory<byte>, CancellationToken)
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  type: Method
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 현재 연결된 모든 클라이언트에게 데이터를 브로드캐스트합니다.
  example: []
  syntax:
    content: public Task<int> BroadcastAsync(ReadOnlyMemory<byte> data, CancellationToken ct = default)
    parameters:
    - id: data
      type: System.ReadOnlyMemory{System.Byte}
      description: 전송할 데이터 버퍼.
    - id: ct
      type: System.Threading.CancellationToken
      description: 전송 작업을 취소하기 위한 토큰(선택).
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: 성공적으로 전송된 클라이언트 수를 반환합니다.
    content.vb: Public Function BroadcastAsync(data As ReadOnlyMemory(Of Byte), ct As CancellationToken = Nothing) As Task(Of Integer)
  overload: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync*
  nameWithType.vb: TcpServer.BroadcastAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName.vb: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  name.vb: BroadcastAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
  commentId: P:HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
  id: IsDisposed
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: TcpServer.IsDisposed
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
  type: Property
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 이 인스턴스가 이미 해제(Dispose)되었는지 여부를 나타냅니다.
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
  commentId: P:HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
  id: ConnectedCount
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: ConnectedCount
  nameWithType: TcpServer.ConnectedCount
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
  type: Property
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 현재 연결되어 있는 클라이언트 수를 반환합니다.
  example: []
  syntax:
    content: public int ConnectedCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ConnectedCount As Integer
  overload: HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.LogError
  commentId: P:HYSoft.Communication.Tcp.Server.TcpServer.LogError
  id: LogError
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: LogError
  nameWithType: TcpServer.LogError
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.LogError
  type: Property
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: >-
    오류 발생 시 호출되는 외부 로깅 델리게이트입니다.

    <p>첫 번째 매개변수는 예외, 두 번째 매개변수는 설명 메시지입니다.</p>
  example: []
  syntax:
    content: public Action<Exception, string>? LogError { get; init; }
    parameters: []
    return:
      type: System.Action{System.Exception,System.String}
    content.vb: Public Property LogError As Action(Of Exception, String)
  overload: HYSoft.Communication.Tcp.Server.TcpServer.LogError*
- uid: HYSoft.Communication.Tcp.Server.TcpServer.DataReceived
  commentId: E:HYSoft.Communication.Tcp.Server.TcpServer.DataReceived
  id: DataReceived
  parent: HYSoft.Communication.Tcp.Server.TcpServer
  langs:
  - csharp
  - vb
  name: DataReceived
  nameWithType: TcpServer.DataReceived
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.DataReceived
  type: Event
  source:
    href: https://github.com/dlghksdyd/HYSoft/blob/78187021d61ebd716c9ebcca33d970389db623d8/src/Communication/Tcp/Server/TcpServer.cs
  assemblies:
  - Communication
  namespace: HYSoft.Communication.Tcp.Server
  summary: 클라이언트로부터 데이터가 수신되었을 때 발생하는 이벤트입니다.
  example: []
  syntax:
    content: public event TcpDataReceivedEventHandler? DataReceived
    return:
      type: HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler
    content.vb: Public Event DataReceived As TcpDataReceivedEventHandler
references:
- uid: HYSoft.Communication.Tcp.Server
  commentId: N:HYSoft.Communication.Tcp.Server
  isExternal: true
  href: HYSoft.html
  name: HYSoft.Communication.Tcp.Server
  nameWithType: HYSoft.Communication.Tcp.Server
  fullName: HYSoft.Communication.Tcp.Server
  spec.csharp:
  - uid: HYSoft
    name: HYSoft
    isExternal: true
    href: HYSoft.html
  - name: .
  - uid: HYSoft.Communication
    name: Communication
    isExternal: true
    href: HYSoft.Communication.html
  - name: .
  - uid: HYSoft.Communication.Tcp
    name: Tcp
    isExternal: true
    href: HYSoft.Communication.Tcp.html
  - name: .
  - uid: HYSoft.Communication.Tcp.Server
    name: Server
    isExternal: true
    href: HYSoft.Communication.Tcp.Server.html
  spec.vb:
  - uid: HYSoft
    name: HYSoft
    isExternal: true
    href: HYSoft.html
  - name: .
  - uid: HYSoft.Communication
    name: Communication
    isExternal: true
    href: HYSoft.Communication.html
  - name: .
  - uid: HYSoft.Communication.Tcp
    name: Tcp
    isExternal: true
    href: HYSoft.Communication.Tcp.html
  - name: .
  - uid: HYSoft.Communication.Tcp.Server
    name: Server
    isExternal: true
    href: HYSoft.Communication.Tcp.Server.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_GetClientsSnapshot
  name: GetClientsSnapshot
  nameWithType: TcpServer.GetClientsSnapshot
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.GetClientsSnapshot
- uid: System.ValueTuple{System.Guid,System.Net.EndPoint}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: (Guid Id, EndPoint Remote)[]
  nameWithType: (Guid Id, EndPoint Remote)[]
  fullName: (System.Guid Id, System.Net.EndPoint Remote)[]
  nameWithType.vb: (Id As Guid, Remote As EndPoint)()
  fullName.vb: (Id As System.Guid, Remote As System.Net.EndPoint)()
  name.vb: (Id As Guid, Remote As EndPoint)()
  spec.csharp:
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: " "
  - uid: System.ValueTuple{System.Guid,System.Net.EndPoint}.Id
    name: Id
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,system.net.endpoint-.id
  - name: ','
  - name: " "
  - uid: System.Net.EndPoint
    name: EndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.endpoint
  - name: " "
  - uid: System.ValueTuple{System.Guid,System.Net.EndPoint}.Remote
    name: Remote
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,system.net.endpoint-.remote
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Guid,System.Net.EndPoint}.Id
    name: Id
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,system.net.endpoint-.id
  - name: " "
  - name: As
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,System.Net.EndPoint}.Remote
    name: Remote
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,system.net.endpoint-.remote
  - name: " "
  - name: As
  - name: " "
  - uid: System.Net.EndPoint
    name: EndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.endpoint
  - name: )
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: HYSoft.Communication.Tcp.Server.TcpServer.StartAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.StartAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_StartAsync
  name: StartAsync
  nameWithType: TcpServer.StartAsync
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.StartAsync
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: HYSoft.Communication.Tcp.Server.TcpServer.StopAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.StopAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_StopAsync
  name: StopAsync
  nameWithType: TcpServer.StopAsync
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.StopAsync
- uid: HYSoft.Communication.Tcp.Server.TcpServer.Disconnect*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.Disconnect
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_Disconnect_System_Guid_
  name: Disconnect
  nameWithType: TcpServer.Disconnect
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.Disconnect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.SendAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_SendAsync_System_Guid_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  name: SendAsync
  nameWithType: TcpServer.SendAsync
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.SendAsync
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_BroadcastAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  name: BroadcastAsync
  nameWithType: TcpServer.BroadcastAsync
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.BroadcastAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_IsDisposed
  name: IsDisposed
  nameWithType: TcpServer.IsDisposed
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.IsDisposed
- uid: HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_ConnectedCount
  name: ConnectedCount
  nameWithType: TcpServer.ConnectedCount
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.ConnectedCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: HYSoft.Communication.Tcp.Server.TcpServer.LogError*
  commentId: Overload:HYSoft.Communication.Tcp.Server.TcpServer.LogError
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpServer.html#HYSoft_Communication_Tcp_Server_TcpServer_LogError
  name: LogError
  nameWithType: TcpServer.LogError
  fullName: HYSoft.Communication.Tcp.Server.TcpServer.LogError
- uid: System.Action{System.Exception,System.String}
  commentId: T:System.Action{System.Exception,System.String}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Exception, string>
  nameWithType: Action<Exception, string>
  fullName: System.Action<System.Exception, string>
  nameWithType.vb: Action(Of Exception, String)
  fullName.vb: System.Action(Of System.Exception, String)
  name.vb: Action(Of Exception, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler
  commentId: T:HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler
  parent: HYSoft.Communication.Tcp.Server
  isExternal: true
  href: HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler.html
  name: TcpDataReceivedEventHandler
  nameWithType: TcpDataReceivedEventHandler
  fullName: HYSoft.Communication.Tcp.Server.TcpDataReceivedEventHandler
